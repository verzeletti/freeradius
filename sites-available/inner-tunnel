#
# File: sites-available/default
#
# versao 20240201
#
# Glaidson Verzeletti <verzeletti@gmail.com>
#
#
# OBSERVAÇÃO:
#     Versão deve estar alinhada com arquivo policy/vlan_ifsc
#
########################

server inner-tunnel {
listen {
       ipaddr = 127.0.0.1
       port = 18120
       type = auth
}
authorize {
        filter_username
        # Obtem username da string DOMINIO\username
        if ("%{request:User-Name}" =~ /^((.*)\\)+(.*)/) {
                update request {
                        Stripped-User-Name := "%{3}"
                }
        }
        # Obtem computername$ da string host/computername.dominio
        elsif ("%{request:User-Name}" =~ /^(.*\/)+([^.]+)/) {
                update request {
                        Stripped-User-Name := "%{2}$"
                }
        }
        else {
                update request {
                        Stripped-User-Name := "%{request:User-Name}"
                }
        }
        mschap
        eap {
                ok = return
        }
        files
        expiration
        # Permite usuarios das OUs Usuarios, Alunos, Lages_LAN, Computadores logare no SSID IFSC
        # Configurações necessárias nos notebooks: GIT do projeto Samba4-AD
        if ( &Called-Station-Id && &Called-Station-Id =~ /.*:IFSC$/i) {
                if ("%{ldap:ldap:///OU=Wifi,OU=Computadores,dc=lages,dc=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }
                elsif ("%{ldap:ldap:///OU=Visitantes,OU=Usuarios,OU=Lages_LAN,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") || ("%{ldap:ldap:///OU=Terceirizados,OU=Usuarios,OU=Lages_LAN,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }
                elsif ("%{ldap:ldap:///OU=Usuarios,dc=lages,dc=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }
                elsif ("%{ldap:ldap:///OU=Alunos,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }
                else{
                        reject
                }
        }
        elsif ( &Called-Station-Id && &Called-Station-Id =~ /.*:IFSC-ADM$/i) {
                if ("%{ldap:ldap:///OU=Usuarios,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }else{
                        reject
                }
        }
        elsif ( &Called-Station-Id && &Called-Station-Id =~ /.*:IFSC-ALUNOS$/i) {
                if ("%{ldap:ldap:///OU=Alunos,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }else{
                        reject
                }
        }
        elsif ( &Called-Station-Id && &Called-Station-Id =~ /.*:IFSC-VISITANTE$/i) {
                if ("%{ldap:ldap:///OU=Visitantes,OU=Usuarios,OU=Lages_LAN,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") || ("%{ldap:ldap:///OU=Terceirizados,OU=Usuarios,OU=Lages_LAN,DC=lages,DC=sc?sAMAccountName?sub?sAMAccountName=%{Stripped-User-Name}}") {
                        ok = return
                }else{
                        reject
                }
        }
}
authenticate {
        ntlm_auth
        Auth-Type MS-CHAP {
                mschap
        }
        mschap
        eap
}
session {
}
post-auth {
        # Função do "policy/vlan_ifsc": VID automático para usuários e computadores
        rewrite.vlan_ifsc

        Post-Auth-Type REJECT {
                attr_filter.access_reject
                update outer.session-state {
                        &Module-Failure-Message := &request:Module-Failure-Message
                }
        }
        Post-Auth-Type Challenge {
        }
}
pre-proxy {
}
post-proxy {
 eap
}
}

